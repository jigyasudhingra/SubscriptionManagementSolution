{"version":3,"sources":["Components/Typo.tsx","Hooks/useToastMessage.ts","../node_modules/@material-ui/core/esm/CircularProgress/CircularProgress.js","Hooks/useConfirmationDialog.tsx","../node_modules/@material-ui/core/esm/Link/Link.js","../node_modules/@material-ui/core/esm/styles/styled.js","../node_modules/@material-ui/core/esm/Box/Box.js"],"names":["getFontWeight","theme","weight","typography","fontWeightBold","fontWeightMedium","fontWeightRegular","isUrl","text","test","Typo","props","children","whiteSpace","underline","contrast","typographyProps","useTheme","style","textDecoration","undefined","fontWeight","color","rel","href","target","cursor","showToast","useContext","AppToastContext","action","a","toastConfig","res","successToastMessage","variant","msg","showApiErrorMsg","errorToastMessage","get","CircularProgress","React","ref","classes","className","_props$color","_props$disableShrink","disableShrink","_props$size","size","_props$thickness","thickness","_props$value","value","_props$variant","other","_objectWithoutProperties","circleStyle","rootStyle","rootProps","circumference","Math","PI","strokeDasharray","toFixed","round","strokeDashoffset","concat","transform","_extends","clsx","root","capitalize","determinate","indeterminate","static","width","height","role","svg","viewBox","SIZE","circle","circleDisableShrink","circleDeterminate","circleIndeterminate","circleStatic","cx","cy","r","fill","strokeWidth","withStyles","display","transition","transitions","create","animation","colorPrimary","palette","primary","main","colorSecondary","secondary","stroke","transformOrigin","name","flip","ActionButton","AppDialogContext","showDialog","hideDialog","getBody","body","config","message","headerProps","isCloseButton","isActionCloseButton","PaperProps","padding","title","actionsChildren","agree","withToast","useToastMessage","useState","loading","setLoading","isAsync","constructor","accept","Box","mr","alignItems","Button","disabled","onClick","agreeText","cancelText","Link","_props$component","component","onBlur","onFocus","TypographyClasses","_props$underline","_useIsFocusVisible","useIsFocusVisible","isFocusVisible","onBlurVisible","focusVisibleRef","_React$useState","focusVisible","setFocusVisible","handlerRef","useForkRef","Typography","button","event","underlineNone","underlineHover","underlineAlways","position","WebkitTapHighlightColor","backgroundColor","outline","border","margin","borderRadius","userSelect","verticalAlign","borderStyle","styled","Component","componentCreator","styledWithoutDefault","options","defaultTheme","styleFunction","styleFunctionSx","compose","borders","flexbox","grid","positions","shadows","sizing","spacing"],"mappings":"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","file":"static/js/6.86984adb.chunk.js","sourcesContent":["import React from 'react';\nimport { Theme, TypographyProps, Typography, Link } from '@material-ui/core';\nimport { useTheme } from '@material-ui/core/styles';\n\nexport interface TypoProps extends TypographyProps {\n    weight?: 'regular' | 'medium' | 'bold';\n    underline?: boolean;\n    contrast?: boolean;\n    whiteSpace?: React.CSSProperties['whiteSpace'];\n}\n\nconst Typo: React.FC<TypoProps> = (props) => {\n    const {\n        children,\n        weight = 'regular',\n        whiteSpace,\n        underline = false,\n        contrast = false,\n        ...typographyProps\n    } = props;\n    const theme = useTheme();\n    const style = {\n        ...typographyProps.style,\n        textDecoration: underline ? 'underline' : undefined,\n        fontWeight: getFontWeight(theme, weight),\n        whiteSpace,\n        color: contrast ? 'white' : undefined,\n    };\n\n    if (typeof children === 'string' && isUrl(children)) {\n        return (\n            <Link\n                rel=\"noopener\"\n                href={children}\n                target=\"_blank\"\n                {...typographyProps}\n                style={{ ...style, cursor: 'pointer' }}\n            >\n                {props.children}\n            </Link>\n        );\n    }\n\n    return (\n        <Typography color=\"textPrimary\" {...typographyProps} style={style}>\n            {children}\n        </Typography>\n    );\n};\n\nconst getFontWeight = (theme: Theme, weight: TypoProps['weight']) => {\n    if (weight === 'bold') return theme.typography.fontWeightBold;\n    if (weight === 'medium') return theme.typography.fontWeightMedium;\n    if (weight === 'regular') return theme.typography.fontWeightRegular;\n    return theme.typography.fontWeightRegular;\n};\n\nconst isUrl = (text: string) => {\n    return /^(http:\\/\\/www\\.|https:\\/\\/www\\.|http:\\/\\/|https:\\/\\/)?[a-z0-9]+([\\-\\.]{1}[a-z0-9]+)*\\.[a-z]{2,5}(:[0-9]{1,5})?(\\/.*)?$/gi.test(\n        text\n    );\n};\n\nexport default Typo;\n","import { useContext } from 'react';\nimport { get } from 'lodash';\nimport { AppToastContext } from '../Contexts/AppToastContext';\n\nconst SUCCESS_TOAST_MESSAGE = 'Success';\nconst ERROR_TOAST_MESSAGE = 'Something went wrong';\n\n/**\n * A hook for toast handling\n * @returns a function\n * @example\n * const withToast = useToastMessage(); // import useToastMessage first\n * const submitForm = async (formData: any) =>  await withToast(async () => {\n *      // do your async function and throw the error\n *  },\n *  {\n *      showApiErrorMsg: false, // without this flag, error message from api is displayed in toast\n *      successToastMessage: 'Form submitted successfully',\n *      errorToastMessage: 'Error submitting form',\n *  });\n */\nexport default () => {\n  const { showToast } = useContext(AppToastContext);\n\n  const withToast = async (\n    action: () => any,\n    toastConfig: WithToastConfig = {}\n  ) => {\n    try {\n      const res = await action();\n      showToast(toastConfig.successToastMessage || SUCCESS_TOAST_MESSAGE, {\n        variant: 'success',\n      });\n      return res;\n    } catch (error) {\n      const msg =\n        toastConfig.showApiErrorMsg === false\n          ? toastConfig.errorToastMessage || ERROR_TOAST_MESSAGE\n          : get(error, 'response.data.error.message');\n      showToast(msg, { variant: 'error' });\n      throw error;\n    }\n  };\n\n  return withToast;\n};\n\nexport interface WithToastConfig {\n  successToastMessage?: string;\n  errorToastMessage?: string;\n  showApiErrorMsg?: boolean;\n}\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nvar SIZE = 44;\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-block'\n    },\n\n    /* Styles applied to the root element if `variant=\"static\"`. */\n    static: {\n      transition: theme.transitions.create('transform')\n    },\n\n    /* Styles applied to the root element if `variant=\"indeterminate\"`. */\n    indeterminate: {\n      animation: '$circular-rotate 1.4s linear infinite'\n    },\n\n    /* Styles applied to the root element if `variant=\"determinate\"`. */\n    determinate: {\n      transition: theme.transitions.create('transform')\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      color: theme.palette.secondary.main\n    },\n\n    /* Styles applied to the `svg` element. */\n    svg: {\n      display: 'block' // Keeps the progress centered\n\n    },\n\n    /* Styles applied to the `circle` svg path. */\n    circle: {\n      stroke: 'currentColor' // Use butt to follow the specification, by chance, it's already the default CSS value.\n      // strokeLinecap: 'butt',\n\n    },\n\n    /* Styles applied to the `circle` svg path if `variant=\"static\"`. */\n    circleStatic: {\n      transition: theme.transitions.create('stroke-dashoffset')\n    },\n\n    /* Styles applied to the `circle` svg path if `variant=\"indeterminate\"`. */\n    circleIndeterminate: {\n      animation: '$circular-dash 1.4s ease-in-out infinite',\n      // Some default value that looks fine waiting for the animation to kicks in.\n      strokeDasharray: '80px, 200px',\n      strokeDashoffset: '0px' // Add the unit to fix a Edge 16 and below bug.\n\n    },\n\n    /* Styles applied to the `circle` svg path if `variant=\"determinate\"`. */\n    circleDeterminate: {\n      transition: theme.transitions.create('stroke-dashoffset')\n    },\n    '@keyframes circular-rotate': {\n      '0%': {\n        // Fix IE 11 wobbly\n        transformOrigin: '50% 50%'\n      },\n      '100%': {\n        transform: 'rotate(360deg)'\n      }\n    },\n    '@keyframes circular-dash': {\n      '0%': {\n        strokeDasharray: '1px, 200px',\n        strokeDashoffset: '0px'\n      },\n      '50%': {\n        strokeDasharray: '100px, 200px',\n        strokeDashoffset: '-15px'\n      },\n      '100%': {\n        strokeDasharray: '100px, 200px',\n        strokeDashoffset: '-125px'\n      }\n    },\n\n    /* Styles applied to the `circle` svg path if `disableShrink={true}`. */\n    circleDisableShrink: {\n      animation: 'none'\n    }\n  };\n};\n/**\n * ## ARIA\n *\n * If the progress bar is describing the loading progress of a particular region of a page,\n * you should use `aria-describedby` to point to the progress bar, and set the `aria-busy`\n * attribute to `true` on that region until it has finished loading.\n */\n\nvar CircularProgress = /*#__PURE__*/React.forwardRef(function CircularProgress(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'primary' : _props$color,\n      _props$disableShrink = props.disableShrink,\n      disableShrink = _props$disableShrink === void 0 ? false : _props$disableShrink,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 40 : _props$size,\n      style = props.style,\n      _props$thickness = props.thickness,\n      thickness = _props$thickness === void 0 ? 3.6 : _props$thickness,\n      _props$value = props.value,\n      value = _props$value === void 0 ? 0 : _props$value,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'indeterminate' : _props$variant,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"disableShrink\", \"size\", \"style\", \"thickness\", \"value\", \"variant\"]);\n\n  var circleStyle = {};\n  var rootStyle = {};\n  var rootProps = {};\n\n  if (variant === 'determinate' || variant === 'static') {\n    var circumference = 2 * Math.PI * ((SIZE - thickness) / 2);\n    circleStyle.strokeDasharray = circumference.toFixed(3);\n    rootProps['aria-valuenow'] = Math.round(value);\n    circleStyle.strokeDashoffset = \"\".concat(((100 - value) / 100 * circumference).toFixed(3), \"px\");\n    rootStyle.transform = 'rotate(-90deg)';\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, color !== 'inherit' && classes[\"color\".concat(capitalize(color))], {\n      'determinate': classes.determinate,\n      'indeterminate': classes.indeterminate,\n      'static': classes.static\n    }[variant]),\n    style: _extends({\n      width: size,\n      height: size\n    }, rootStyle, style),\n    ref: ref,\n    role: \"progressbar\"\n  }, rootProps, other), /*#__PURE__*/React.createElement(\"svg\", {\n    className: classes.svg,\n    viewBox: \"\".concat(SIZE / 2, \" \").concat(SIZE / 2, \" \").concat(SIZE, \" \").concat(SIZE)\n  }, /*#__PURE__*/React.createElement(\"circle\", {\n    className: clsx(classes.circle, disableShrink && classes.circleDisableShrink, {\n      'determinate': classes.circleDeterminate,\n      'indeterminate': classes.circleIndeterminate,\n      'static': classes.circleStatic\n    }[variant]),\n    style: circleStyle,\n    cx: SIZE,\n    cy: SIZE,\n    r: (SIZE - thickness) / 2,\n    fill: \"none\",\n    strokeWidth: thickness\n  })));\n});\nprocess.env.NODE_ENV !== \"production\" ? CircularProgress.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['inherit', 'primary', 'secondary']),\n\n  /**\n   * If `true`, the shrink animation is disabled.\n   * This only works if variant is `indeterminate`.\n   */\n  disableShrink: chainPropTypes(PropTypes.bool, function (props) {\n    if (props.disableShrink && props.variant && props.variant !== 'indeterminate') {\n      return new Error('Material-UI: You have provided the `disableShrink` prop ' + 'with a variant other than `indeterminate`. This will have no effect.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * The size of the circle.\n   * If using a number, the pixel unit is assumed.\n   * If using a string, you need to provide the CSS unit, e.g '3rem'.\n   */\n  size: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n\n  /**\n   * The thickness of the circle.\n   */\n  thickness: PropTypes.number,\n\n  /**\n   * The value of the progress indicator for the determinate variant.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number,\n\n  /**\n   * The variant to use.\n   * Use indeterminate when there is no progress value.\n   */\n  variant: chainPropTypes(PropTypes.oneOf(['determinate', 'indeterminate', 'static']), function (props) {\n    var variant = props.variant;\n\n    if (variant === 'static') {\n      throw new Error('Material-UI: `variant=\"static\"` was deprecated. Use `variant=\"determinate\"` instead.');\n    }\n\n    return null;\n  })\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCircularProgress',\n  flip: false\n})(CircularProgress);","import { Box, Button, CircularProgress } from '@material-ui/core';\nimport React, { useContext, useState } from 'react';\nimport { AppDialogContext } from '../Contexts/AppDialogContext';\nimport useToastMessage from './useToastMessage';\nimport Typo from '../Components/Typo';\n\nconst DEFAULT_MESSAGE = 'Confirm action?';\n\n/**\n * A hook for confirmation dialogs\n * @returns a function\n *\n * @example\n * const withConfirmation = useConfirmationDialog();\n * const handleDelete = async (id: string) => await withConfirmation(async () => {\n * // do your async task\n * // throw error, if there is an error\n * });\n *\n */\nexport default () => {\n    const { showDialog, hideDialog } = useContext(AppDialogContext);\n\n    // const getContentComponent = (message: string = DEFAULT_MESSAGE) => {\n    //     return (\n    //         <Typography>{message}</Typography>\n    //     )\n    // }\n\n    const getBody = (body: string | JSX.Element) => {\n        return typeof body === 'string' ? <Typo>{body}</Typo> : body;\n    };\n\n    const withConfirmationDialog = (\n        action: () => any,\n        config: WithConfirmationDialogConfig = {},\n        toastConfig?: WithConfirmationDialogToastConfig\n    ) => {\n        const { message, body } = config;\n        showDialog(body ? getBody(body) : <div />, {\n            headerProps: {\n                isCloseButton: false,\n            },\n            isActionCloseButton: false,\n            PaperProps: {\n                style: {\n                    width: 400,\n                    padding: 16,\n                },\n            },\n            title: message || DEFAULT_MESSAGE,\n\n            actionsChildren: (\n                <ActionButton\n                    agree={action}\n                    hideDialog={hideDialog}\n                    config={config}\n                    toastConfig={toastConfig}\n                />\n            ),\n        });\n    };\n\n    return withConfirmationDialog;\n};\n\nconst ActionButton: React.FC<ActionButtonProps> = (props) => {\n    const { agree, config, toastConfig, hideDialog } = props;\n\n    const withToast = useToastMessage();\n    const [loading, setLoading] = useState(false);\n    const isAsync = agree.constructor.name === 'AsyncFunction';\n\n    const accept = async () => {\n        if (isAsync) {\n            setLoading(true);\n            try {\n                if (toastConfig) {\n                    await withToast(agree, toastConfig);\n                } else {\n                    await agree();\n                }\n            } catch (error) {\n                // Handle error\n            }\n            setLoading(false);\n            hideDialog();\n        } else {\n            if (toastConfig) {\n                withToast(agree, toastConfig);\n            }\n            agree();\n            hideDialog();\n        }\n    };\n\n    return (\n        <Box mr={2} display=\"flex\" alignItems=\"center\">\n            <Box mr={1}>\n                <Button disabled={loading} onClick={accept}>\n                    {loading ? <CircularProgress /> : config.agreeText || 'YES'}\n                </Button>\n            </Box>\n            <Button\n                disabled={loading}\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={hideDialog}\n            >\n                {config.cancelText || 'CANCEL'}\n            </Button>\n        </Box>\n    );\n};\n\nexport interface WithConfirmationDialogConfig {\n    message?: string;\n    body?: JSX.Element | string;\n    agreeText?: string;\n    cancelText?: string;\n}\n\nexport interface WithConfirmationDialogToastConfig {\n    successToastMessage?: string;\n    errorToastMessage?: string;\n}\n\ntype ActionButtonProps = {\n    agree: () => void | Promise<void>;\n    config: WithConfirmationDialogConfig;\n    toastConfig?: WithConfirmationDialogToastConfig;\n    hideDialog: () => void;\n};\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport capitalize from '../utils/capitalize';\nimport withStyles from '../styles/withStyles';\nimport { elementTypeAcceptingRef } from '@material-ui/utils';\nimport useIsFocusVisible from '../utils/useIsFocusVisible';\nimport useForkRef from '../utils/useForkRef';\nimport Typography from '../Typography';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {},\n\n  /* Styles applied to the root element if `underline=\"none\"`. */\n  underlineNone: {\n    textDecoration: 'none'\n  },\n\n  /* Styles applied to the root element if `underline=\"hover\"`. */\n  underlineHover: {\n    textDecoration: 'none',\n    '&:hover': {\n      textDecoration: 'underline'\n    }\n  },\n\n  /* Styles applied to the root element if `underline=\"always\"`. */\n  underlineAlways: {\n    textDecoration: 'underline'\n  },\n  // Same reset as ButtonBase.root\n\n  /* Styles applied to the root element if `component=\"button\"`. */\n  button: {\n    position: 'relative',\n    WebkitTapHighlightColor: 'transparent',\n    backgroundColor: 'transparent',\n    // Reset default value\n    // We disable the focus ring for mouse, touch and keyboard users.\n    outline: 0,\n    border: 0,\n    margin: 0,\n    // Remove the margin in Safari\n    borderRadius: 0,\n    padding: 0,\n    // Remove the padding in Firefox\n    cursor: 'pointer',\n    userSelect: 'none',\n    verticalAlign: 'middle',\n    '-moz-appearance': 'none',\n    // Reset\n    '-webkit-appearance': 'none',\n    // Reset\n    '&::-moz-focus-inner': {\n      borderStyle: 'none' // Remove Firefox dotted outline.\n\n    },\n    '&$focusVisible': {\n      outline: 'auto'\n    }\n  },\n\n  /* Pseudo-class applied to the root element if the link is keyboard focused. */\n  focusVisible: {}\n};\nvar Link = /*#__PURE__*/React.forwardRef(function Link(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'primary' : _props$color,\n      _props$component = props.component,\n      component = _props$component === void 0 ? 'a' : _props$component,\n      onBlur = props.onBlur,\n      onFocus = props.onFocus,\n      TypographyClasses = props.TypographyClasses,\n      _props$underline = props.underline,\n      underline = _props$underline === void 0 ? 'hover' : _props$underline,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'inherit' : _props$variant,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"component\", \"onBlur\", \"onFocus\", \"TypographyClasses\", \"underline\", \"variant\"]);\n\n  var _useIsFocusVisible = useIsFocusVisible(),\n      isFocusVisible = _useIsFocusVisible.isFocusVisible,\n      onBlurVisible = _useIsFocusVisible.onBlurVisible,\n      focusVisibleRef = _useIsFocusVisible.ref;\n\n  var _React$useState = React.useState(false),\n      focusVisible = _React$useState[0],\n      setFocusVisible = _React$useState[1];\n\n  var handlerRef = useForkRef(ref, focusVisibleRef);\n\n  var handleBlur = function handleBlur(event) {\n    if (focusVisible) {\n      onBlurVisible();\n      setFocusVisible(false);\n    }\n\n    if (onBlur) {\n      onBlur(event);\n    }\n  };\n\n  var handleFocus = function handleFocus(event) {\n    if (isFocusVisible(event)) {\n      setFocusVisible(true);\n    }\n\n    if (onFocus) {\n      onFocus(event);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Typography, _extends({\n    className: clsx(classes.root, classes[\"underline\".concat(capitalize(underline))], className, focusVisible && classes.focusVisible, component === 'button' && classes.button),\n    classes: TypographyClasses,\n    color: color,\n    component: component,\n    onBlur: handleBlur,\n    onFocus: handleFocus,\n    ref: handlerRef,\n    variant: variant\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Link.propTypes = {\n  /**\n   * The content of the link.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the link.\n   */\n  color: PropTypes.oneOf(['initial', 'inherit', 'primary', 'secondary', 'textPrimary', 'textSecondary', 'error']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: elementTypeAcceptingRef,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * `classes` prop applied to the [`Typography`](/api/typography/) element.\n   */\n  TypographyClasses: PropTypes.object,\n\n  /**\n   * Controls when the link should have an underline.\n   */\n  underline: PropTypes.oneOf(['none', 'hover', 'always']),\n\n  /**\n   * Applies the theme typography styles.\n   */\n  variant: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiLink'\n})(Link);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { styled as styledWithoutDefault } from '@material-ui/styles';\nimport defaultTheme from './defaultTheme';\n\nvar styled = function styled(Component) {\n  var componentCreator = styledWithoutDefault(Component);\n  return function (style, options) {\n    return componentCreator(style, _extends({\n      defaultTheme: defaultTheme\n    }, options));\n  };\n};\n\nexport default styled;","import { borders, compose, display, flexbox, grid, palette, positions, shadows, sizing, spacing, typography, styleFunctionSx } from '@material-ui/system';\nimport styled from '../styles/styled';\nexport var styleFunction = styleFunctionSx(compose(borders, display, flexbox, grid, positions, palette, shadows, sizing, spacing, typography));\n/**\n * @ignore - do not document.\n */\n\nvar Box = styled('div')(styleFunction, {\n  name: 'MuiBox'\n});\nexport default Box;"],"sourceRoot":""}