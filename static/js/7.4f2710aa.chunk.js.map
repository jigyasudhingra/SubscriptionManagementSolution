{"version":3,"sources":["Components/Typo.tsx","Screens/Home/SpotifySubscription.jsx","../node_modules/@material-ui/core/esm/Link/Link.js"],"names":["getFontWeight","theme","weight","typography","fontWeightBold","fontWeightMedium","fontWeightRegular","isUrl","text","test","Typo","props","children","whiteSpace","underline","contrast","typographyProps","useTheme","style","textDecoration","undefined","fontWeight","color","rel","href","target","cursor","SpotifySubscriptions","useState","token","setToken","data","setData","useEffect","localStorage","getItem","onClick","axios","get","headers","Authorization","then","response","catch","error","console","log","product","Link","React","ref","classes","className","_props$color","_props$component","component","onBlur","onFocus","TypographyClasses","_props$underline","_props$variant","variant","other","_objectWithoutProperties","_useIsFocusVisible","useIsFocusVisible","isFocusVisible","onBlurVisible","focusVisibleRef","_React$useState","focusVisible","setFocusVisible","handlerRef","useForkRef","Typography","_extends","clsx","root","concat","capitalize","button","event","withStyles","underlineNone","underlineHover","underlineAlways","position","WebkitTapHighlightColor","backgroundColor","outline","border","margin","borderRadius","padding","userSelect","verticalAlign","borderStyle","name"],"mappings":"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","file":"static/js/7.4f2710aa.chunk.js","sourcesContent":["import React from 'react';\nimport { Theme, TypographyProps, Typography, Link } from '@material-ui/core';\nimport { useTheme } from '@material-ui/core/styles';\n\nexport interface TypoProps extends TypographyProps {\n    weight?: 'regular' | 'medium' | 'bold';\n    underline?: boolean;\n    contrast?: boolean;\n    whiteSpace?: React.CSSProperties['whiteSpace'];\n}\n\nconst Typo: React.FC<TypoProps> = (props) => {\n    const {\n        children,\n        weight = 'regular',\n        whiteSpace,\n        underline = false,\n        contrast = false,\n        ...typographyProps\n    } = props;\n    const theme = useTheme();\n    const style = {\n        ...typographyProps.style,\n        textDecoration: underline ? 'underline' : undefined,\n        fontWeight: getFontWeight(theme, weight),\n        whiteSpace,\n        color: contrast ? 'white' : undefined,\n    };\n\n    if (typeof children === 'string' && isUrl(children)) {\n        return (\n            <Link\n                rel=\"noopener\"\n                href={children}\n                target=\"_blank\"\n                {...typographyProps}\n                style={{ ...style, cursor: 'pointer' }}\n            >\n                {props.children}\n            </Link>\n        );\n    }\n\n    return (\n        <Typography color=\"textPrimary\" {...typographyProps} style={style}>\n            {children}\n        </Typography>\n    );\n};\n\nconst getFontWeight = (theme: Theme, weight: TypoProps['weight']) => {\n    if (weight === 'bold') return theme.typography.fontWeightBold;\n    if (weight === 'medium') return theme.typography.fontWeightMedium;\n    if (weight === 'regular') return theme.typography.fontWeightRegular;\n    return theme.typography.fontWeightRegular;\n};\n\nconst isUrl = (text: string) => {\n    return /^(http:\\/\\/www\\.|https:\\/\\/www\\.|http:\\/\\/|https:\\/\\/)?[a-z0-9]+([\\-\\.]{1}[a-z0-9]+)*\\.[a-z]{2,5}(:[0-9]{1,5})?(\\/.*)?$/gi.test(\n        text\n    );\n};\n\nexport default Typo;\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport Typo from \"Components/Typo\";\n\nconst USERS_ENDPOINT = \"https://api.spotify.com/v1/me\";\n\nconst SpotifySubscriptions = () => {\n  const [token, setToken] = useState(\"\");\n  const [data, setData] = useState({});\n  const SCOPES = [\n    \"user-read-private\"\n  ];\n  useEffect(() => {\n    if (localStorage.getItem(\"accessToken\")) {\n      setToken(localStorage.getItem(\"accessToken\") );\n    }\n  }, []);\n\n  const handleSubscription = () => {\n    axios\n      .get(USERS_ENDPOINT, {\n        headers: {\n          Authorization: \"Bearer \" + token,\n        },\n      })\n      .then((response) => {\n        setData(response.data);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n//   const handleLogin = () => {\n//     window.location = `${SPOTIFY_AUTHORIZE_ENDPOINT}?client_id=${CLIENT_ID}&redirect_uri=${REDIRECT_URL_AFTER_LOGIN}&scope=${SCOPES_URL_PARAM}&response_type=token&show_dialog=true` as any;\n//   };\nreturn (<>\n    <button onClick={handleSubscription}>SubScribed</button>\n    {data ? <Typo>{data.product} </Typo> : <></>}\n</>)\n}\n\n  export default SpotifySubscriptions;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport capitalize from '../utils/capitalize';\nimport withStyles from '../styles/withStyles';\nimport { elementTypeAcceptingRef } from '@material-ui/utils';\nimport useIsFocusVisible from '../utils/useIsFocusVisible';\nimport useForkRef from '../utils/useForkRef';\nimport Typography from '../Typography';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {},\n\n  /* Styles applied to the root element if `underline=\"none\"`. */\n  underlineNone: {\n    textDecoration: 'none'\n  },\n\n  /* Styles applied to the root element if `underline=\"hover\"`. */\n  underlineHover: {\n    textDecoration: 'none',\n    '&:hover': {\n      textDecoration: 'underline'\n    }\n  },\n\n  /* Styles applied to the root element if `underline=\"always\"`. */\n  underlineAlways: {\n    textDecoration: 'underline'\n  },\n  // Same reset as ButtonBase.root\n\n  /* Styles applied to the root element if `component=\"button\"`. */\n  button: {\n    position: 'relative',\n    WebkitTapHighlightColor: 'transparent',\n    backgroundColor: 'transparent',\n    // Reset default value\n    // We disable the focus ring for mouse, touch and keyboard users.\n    outline: 0,\n    border: 0,\n    margin: 0,\n    // Remove the margin in Safari\n    borderRadius: 0,\n    padding: 0,\n    // Remove the padding in Firefox\n    cursor: 'pointer',\n    userSelect: 'none',\n    verticalAlign: 'middle',\n    '-moz-appearance': 'none',\n    // Reset\n    '-webkit-appearance': 'none',\n    // Reset\n    '&::-moz-focus-inner': {\n      borderStyle: 'none' // Remove Firefox dotted outline.\n\n    },\n    '&$focusVisible': {\n      outline: 'auto'\n    }\n  },\n\n  /* Pseudo-class applied to the root element if the link is keyboard focused. */\n  focusVisible: {}\n};\nvar Link = /*#__PURE__*/React.forwardRef(function Link(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'primary' : _props$color,\n      _props$component = props.component,\n      component = _props$component === void 0 ? 'a' : _props$component,\n      onBlur = props.onBlur,\n      onFocus = props.onFocus,\n      TypographyClasses = props.TypographyClasses,\n      _props$underline = props.underline,\n      underline = _props$underline === void 0 ? 'hover' : _props$underline,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'inherit' : _props$variant,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"component\", \"onBlur\", \"onFocus\", \"TypographyClasses\", \"underline\", \"variant\"]);\n\n  var _useIsFocusVisible = useIsFocusVisible(),\n      isFocusVisible = _useIsFocusVisible.isFocusVisible,\n      onBlurVisible = _useIsFocusVisible.onBlurVisible,\n      focusVisibleRef = _useIsFocusVisible.ref;\n\n  var _React$useState = React.useState(false),\n      focusVisible = _React$useState[0],\n      setFocusVisible = _React$useState[1];\n\n  var handlerRef = useForkRef(ref, focusVisibleRef);\n\n  var handleBlur = function handleBlur(event) {\n    if (focusVisible) {\n      onBlurVisible();\n      setFocusVisible(false);\n    }\n\n    if (onBlur) {\n      onBlur(event);\n    }\n  };\n\n  var handleFocus = function handleFocus(event) {\n    if (isFocusVisible(event)) {\n      setFocusVisible(true);\n    }\n\n    if (onFocus) {\n      onFocus(event);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Typography, _extends({\n    className: clsx(classes.root, classes[\"underline\".concat(capitalize(underline))], className, focusVisible && classes.focusVisible, component === 'button' && classes.button),\n    classes: TypographyClasses,\n    color: color,\n    component: component,\n    onBlur: handleBlur,\n    onFocus: handleFocus,\n    ref: handlerRef,\n    variant: variant\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Link.propTypes = {\n  /**\n   * The content of the link.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the link.\n   */\n  color: PropTypes.oneOf(['initial', 'inherit', 'primary', 'secondary', 'textPrimary', 'textSecondary', 'error']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: elementTypeAcceptingRef,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * `classes` prop applied to the [`Typography`](/api/typography/) element.\n   */\n  TypographyClasses: PropTypes.object,\n\n  /**\n   * Controls when the link should have an underline.\n   */\n  underline: PropTypes.oneOf(['none', 'hover', 'always']),\n\n  /**\n   * Applies the theme typography styles.\n   */\n  variant: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiLink'\n})(Link);"],"sourceRoot":""}